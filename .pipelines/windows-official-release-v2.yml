
trigger:
- none

pr:
- none

parameters: # parameters are shown up in ADO UI in a build queue time
- name: 'debug'
  displayName: 'Enable debug output'
  type: boolean
  default: false

variables:
  Codeql.Enabled: true

jobs:
- job: main
  pool:
    vmImage: 'windows-latest'
  
  variables: # More settings at https://aka.ms/obpipelines/yaml/jobs
    Codeql.Enabled: true

  steps:

    - task: CmdLine@2
      displayName: 'Install .NET'
      inputs:
        script: build\CallPowerShell.cmd build/install-dotnet.ps1 -RestoreOnly
        workingDirectory: '$(Build.SourcesDirectory)'

    - task: CmdLine@2
      displayName: 'Restore'
      inputs:
        script: $(Build.SourcesDirectory)\build\CallPowerShell.cmd build.ps1 -RestoreOnly
        workingDirectory: '$(Build.SourcesDirectory)'

    - task: CodeQL3000Init@0
      displayName: 'Initialize CodeQL'


    - task: CmdLine@2
      displayName: 'Dotnet Build'
      inputs:
        script: $(Build.SourcesDirectory)\build\CallPowerShell.cmd build.ps1
        workingDirectory: '$(Build.SourcesDirectory)'

    - task: CopyFiles@2
      inputs:
        SourceFolder: '$(Build.SourcesDirectory)\buildlogs'
        Contents: |
          **/*
        TargetFolder: '$(Build.SourcesDirectory)\out\outputs\build\Build Logs'

    - task: CmdLine@2
      displayName: 'Dotnet Pack'
      inputs:
        script: $(Build.SourcesDirectory)\build\CallPowerShell.cmd pack.ps1
        workingDirectory: '$(Build.SourcesDirectory)'

    - task: CopyFiles@2
      inputs:
        SourceFolder: '$(Build.SourcesDirectory)\buildlogs'
        Contents: |
          **/*
        TargetFolder: '$(Build.SourcesDirectory)\out\outputs\package\Build Logs'

    #- task: onebranch.pipeline.signing@1
    #  displayName: 'Signing'
    #  inputs:
    #    command: 'sign'
    #    signing_environment: 'azure-ado'
    #    signing_profile: 'external_distribution '
    #    files_to_sign: '*/bin/Release/**/*'
    #    search_root: '$(Build.SourcesDirectory)\src'
              

    - task: CopyFiles@2
      inputs:
        SourceFolder: '$(Build.SourcesDirectory)\src'
        Contents: |
          */bin/Release/**/*
        TargetFolder: '$(Build.SourcesDirectory)\out\outputs\build\Binaries'

    - task: CmdLine@2
      displayName: 'Dotnet Pack'
      inputs:
        script: $(Build.SourcesDirectory)\build\CallPowerShell.cmd pack.ps1
        workingDirectory: '$(Build.SourcesDirectory)'

    - task: CopyFiles@2
      inputs:
        SourceFolder: '$(Build.SourcesDirectory)\buildlogs'
        Contents: |
          **/*
        TargetFolder: '$(Build.SourcesDirectory)\out\outputs\package\Build Logs'



    #- task: onebranch.pipeline.signing@1
    #  displayName: 'Signing'
    #  inputs:
    #    command: 'sign'
    #    signing_environment: 'azure-ado'
    #    signing_profile: 'external_distribution '
    #    files_to_sign: '*/bin/PackageOutput/**/*.nupkg'
    #    search_root: '$(Build.SourcesDirectory)\src'
              

    - task: CopyFiles@2
      inputs:
        SourceFolder: '$(Build.SourcesDirectory)\src'
        Contents: |
          */bin/PackageOutput/**/*.nupkg
        TargetFolder: '$(Build.SourcesDirectory)\out\outputs\package\Packages'

    - task: CmdLine@2
      displayName: 'Dotnet Test'
      inputs:
        script: '$(Build.SourcesDirectory)\build/CallPowerShell.cmd test.ps1|| exit /b 0'
        workingDirectory: '$(Build.SourcesDirectory)'


    - task: CopyFiles@2
      inputs:
        SourceFolder: '$(Build.SourcesDirectory)\tests'
        Contents: '**/*.trx'
        TargetFolder: '$(Build.SourcesDirectory)\out\outputs\test\_post_command__run_log_alerts_schedular_tests\_testresults'

    - task: PublishTestResults@2
      displayName: 'Unit Tests'
      inputs:
        testResultsFormat: 'vstest'
        testResultsFiles: '**/*.trx'
        searchFolder: ''
        failTaskOnFailedTests: False
        testRunTitle: Unit Tests

    - task: ComponentGovernanceComponentDetection@0
      displayName: "Component Detection"
      inputs:
        scanType: 'Register'
        verbosity: 'Verbose'
        alertWarningLevel: 'High'

    - task: PublishPipelineArtifact@1
      displayName: 'Publish Artifacts'
      inputs:
        targetPath: '$(Build.SourcesDirectory)\out\outputs'
        artifact: 'drop'
        publishLocation: 'pipeline'

    - task: CodeQL3000Finalize@0
      displayName: 'Finalize CodeQL'
